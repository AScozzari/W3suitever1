name: Code Quality & Rule Enforcement

on:
  push:
    branches: [ main, develop, feature/*, release/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-rules:
    name: Validate W3 Suite Rules
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for forbidden shared/ folder references
        run: node scripts/validate-no-shared-refs.js
        
      - name: Validate frontend rules (Layout, CSS variables, components)
        run: node scripts/validate-frontend-rules.js
        
      - name: Validate schema import paths
        run: node scripts/validate-schema-imports.js
        
      - name: Validate HR system completeness
        run: node scripts/validate-hr-system.js
        
      - name: Run TypeScript compilation check
        run: npm run check
        
      - name: Check for console.log statements
        run: node scripts/validate-no-console.js
        
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0 || true
        
      - name: Check Prettier formatting
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,md}" || true

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
        
      - name: Check for sensitive data exposure
        run: |
          # Check for exposed secrets/tokens
          grep -r -E "(api_key|apikey|secret|token|password|pwd|passwd)\\s*=\\s*['\"][^'\"]+['\"]" \
            --include="*.js" --include="*.ts" --include="*.tsx" --include="*.jsx" \
            --exclude-dir=node_modules --exclude-dir=.git || echo "No hardcoded secrets found"
            
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: validate-rules
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Run tests
        run: npm test || echo "No tests configured"

  report-violations:
    name: Generate Violation Report
    runs-on: ubuntu-latest
    if: failure()
    needs: [validate-rules, lint-and-format, security-scan, build-test]
    
    steps:
      - name: Comment PR with violations
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Code quality checks failed!**\n\nPlease check the workflow logs for detailed violation reports.\n\n[View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            })